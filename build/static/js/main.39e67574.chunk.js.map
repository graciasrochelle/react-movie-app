{"version":3,"sources":["loading.gif","logo.svg","components/NavBar.js","context.js","components/Movie.js","components/Title.js","components/MovieList.js","components/Details.js","components/Default.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","NavWrapper","className","Link","to","src","logo","alt","Component","styled","nav","_templateObject","MovieContext","React","createContext","MovieProvider","state","movies","details","undefined","isLoading","error","refresh","callAPI","_callee","url","signal","headers","request","regenerator_default","wrap","_context","prev","next","Headers","append","fetch","sent","abrupt","stop","getMovies","_callee2","controller","tempMovies","response","_context2","AbortController","setTimeout","abort","concat","_this","setState","status","mError","json","value","forEach","item","singleItem","Object","objectSpread","toConsumableArray","getItem","_callee3","id","provider","params","data","_context3","handleDetail","handleList","this","Provider","props","children","MovieConsumer","Consumer","Movie","_this$props$movie","movie","title","poster","year","type","MovieWrapper","onClick","div","Movie_templateObject","Title","_ref","name","MovieList","Fragment","loading","map","components_Movie","key","Details","_value$details","genre","plot","price","Default","App","components_NavBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","context_MovieProvider","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39e67574.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.466ec83d.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.465dc53c.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.svg';\nimport styled from \"styled-components\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n        <NavWrapper className=\"navbar navbar-expand-sm navbar-dark px-sm-5\">\n          <Link to='/'>\n            <img src={logo} alt=\"movie\" className=\"navbar-brand\"/>\n          </Link>\n          <ul className=\"navbar-nav align-items-center\">\n            <li className=\"nav-item ml-5\">\n              <Link to='/' className=\"nav-link\">\n                movies\n              </Link>\n            </li>\n          </ul>\n        </NavWrapper>\n    );\n  }\n}\n\nconst NavWrapper = styled.nav`\n  background: var(--mainBlue);\n  .nav-link{\n    color: var(--mainWhite) !important;\n    font-size: 1.3rem;\n    text-transform: capitalize;\n  }\n`;\n\nexport default NavBar;","import React, { Component } from 'react';\n\nconst MovieContext = React.createContext();\n\nclass MovieProvider extends Component {\n\n  state = {\n    movies: [],\n    details: undefined,\n    isLoading: false,\n    error: false,\n    refresh: false\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  callAPI = async (url, signal) =>{\n    let headers = new Headers();\n    headers.append('Access-Control-Allow-Origin', '*');\n    headers.append('Content-Type', 'application/json; charset=utf-8');\n    headers.append('mode', 'no-cors');\n    const request = await fetch(url, { headers: headers }, {signal});\n\n    return request;\n  }\n\n  getMovies =  async () => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    setTimeout(() => { \n      controller.abort();\n    }, 500);\n\n    const endpoint = `/api/movies/`;\n    const url = `https://webmovieapi.azurewebsites.net${endpoint}`;\n    let tempMovies = [];\n\n    this.setState({ error: false, isLoading: true });\n\n    const request = this.callAPI(url, signal);\n\n    const response = await request;\n    if(response.status !== 200){\n      this.setState(() => {\n        return {\n          mError: true, \n          isLoading: false\n        }\n      });\n    }else if(response.status === 200){\n        const data = await response.json();\n        (data.value).forEach(item => {\n          const singleItem = {...item};\n          tempMovies = [...tempMovies, singleItem];\n        })\n        this.setState(() => {\n          return {\n            movies: tempMovies,\n            isLoading: false,\n            error: false\n          }\n        });\n    }\n  }\n\n  getItem = async (id, provider) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    setTimeout(() => { \n      controller.abort();\n    }, 500);\n    const params = provider +`/`+ id;\n    const endpoint = `/api/movies/`;\n    const url = `https://webmovieapi.azurewebsites.net${endpoint}${params}`;\n\n    this.setState({ error: false, isLoading: true });\n    const request = this.callAPI(url, signal);\n\n    const response = await request;\n \n    if(response.status !== 200){\n      this.setState(() => {\n        return {\n          error: true, \n          isLoading: false\n        }\n      });\n    }else if(response.status === 200){\n      const data = await response.json();\n      this.setState(() => {\n        return {\n          details: data.value,\n          isLoading: false,\n          error: false\n        }\n      });\n    }\n  }\n\n  handleDetail = (id, provider) => {\n    this.setState({ details: undefined })\n    this.getItem(id, provider);\n  }\n\n  handleList = () => {\n    this.setState({ movies: [] })\n    this.getMovies();\n  }\n\n  render() {\n\n    return (\n      <MovieContext.Provider value={{\n        ...this.state,\n        handleDetail: this.handleDetail,\n        handleList: this.handleList\n      }}>\n        {this.props.children}\n      </MovieContext.Provider>\n    );\n  }\n}\n\nconst MovieConsumer = MovieContext.Consumer;\n\nexport { MovieProvider, MovieConsumer };","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { MovieConsumer } from '../context';\nimport PropTypes from 'prop-types';\n\nclass Movie extends Component {\n  render() {\n    const {id, title, poster, year, type, provider} = this.props.movie;\n    return (\n      <MovieWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n      <div className=\"card\">\n        <p className=\"align-self-center mb-0 card-title\">{type}</p>\n        <MovieConsumer>\n          {value => {\n            return (\n              <div className=\"img-container p-5\">\n                <img src={poster} alt=\"\" className=\"card-img-top\" />\n                <button className=\"view-btn\" onClick={() => { value.handleDetail(id, provider)}}>\n                  <Link to=\"/details\">View Details</Link>\n                </button>\n              </div>\n            );\n          }}\n        </MovieConsumer>\n        <div className=\"card-footer d-flex justify-content-between\">\n          <p className=\"align-self-center mb-0\">{title}</p>\n          <h5 className=\"text-blue font-italic mb-0\">\n            {year}\n          </h5>\n        </div>\n      </div>\n    </MovieWrapper>\n    );\n  }\n}\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    poster: PropTypes.string,\n    year: PropTypes.string,\n    type: PropTypes.string\n  }).isRequired\n}\n\nconst MovieWrapper = styled.div`\n  .card {\n    border-color: transparent;\n  }\n  .card-title{\n    padding: 0.2rem 0.4rem;\n    font-size: 1.4rem;\n  }\n  .card-footer {\n    background: transparent;\n    border-top: transparent;\n  }\n  &:hover {\n    .card {\n      border: 0.04rem solid rgba(0, 0, 0, 0.2);\n      box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.2);\n    }\n    .card-footer {\n      background: rgba(247, 247, 247);\n    }\n  }\n  .img-container {\n    position: relative;\n    overflow: hidden;\n  }\n  .view-btn {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    padding: 0.2rem 0.4rem;\n    background: var(--lightBlue);\n    border: none;\n    color: var(--mainWhite);\n    font-size: 1.4rem;\n    border-radius: 0.5rem 0 0 0;\n  }\n  .view-btn:hover {\n    color: var(--mainBlue);\n    cursor: pointer;\n  }\n`\nexport default Movie;","import React from 'react'\n\nexport default function Title({ name, title }) {\n  return (\n    <div className=\"row\">\n      <div className=\"col-10 mx-auto my-2 text-center text-title\">\n        <h1 className=\"text-capitalize font-weight-bold\">\n            {name} <strong className=\"text-blue\">{title}</strong>\n        </h1>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport Movie from './Movie';\nimport Title from './Title';\nimport { MovieConsumer } from \"../context\";\nimport loading from '../loading.gif';\nimport { Link } from 'react-router-dom';\n\nclass MovieList extends Component {\n  render() {\n    return (\n        <React.Fragment>\n          <div className=\"py-5\">\n            <div className=\"container\">\n              <Title name=\"movies\" title=\"list\"/>\n              <div className=\"row\">\n                <MovieConsumer>\n                {value => {\n                  if(value.isLoading){\n                    return (\n                      <div className=\"col-9 mx-auto col-md-6 col-lg-3 my-3 align-self-center \">\n                        <img alt=\"loading...\" src={loading}/>\n                      </div>\n                      );\n                  }else if(!value.isLoading && value.error){\n                    return (\n                      <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\n                          <button onClick={() => { value.handleList()}}>\n                              <Link to=\"/\">Refresh List View</Link>\n                            </button>\n                        </div>);\n                  }else{\n                    return value.movies.map(movie => {\n                      return <Movie key={movie.id} movie={movie}/>\n                    })\n                  }\n                }\n                }\n                </MovieConsumer>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default MovieList;","import React, { Component } from 'react'\nimport { MovieConsumer } from '../context';\nimport { Link } from \"react-router-dom\";\nimport loading from '../loading.gif';\n\nexport default class Details extends Component {\n  render() {\n    return (\n      <MovieConsumer>\n      {(value) => {\n        if(value.isLoading){\n            return (\n              <div className=\"col-9 mx-auto col-md-6 col-lg-3 my-3 align-self-center \">\n                <img alt=\"loading...\" src={loading}/>\n              </div>);\n        }else if((!value.isLoading && value.error) || (!value.isLoading && !value.error && value.details === undefined) ){\n          return (\n              <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\n                <button onClick={() => { value.handleList()}}>\n                    <Link to=\"/\">Back to List View</Link>\n                  </button>\n              </div>);\n        }else if(value.details !== undefined && !value.isLoading && !value.error){\n          const {\n              genre,\n              poster,\n              plot,\n              price,\n              title\n            } = value.details;\n            \n            return (\n              <div className=\"container py-5\">\n                <div className=\"row\">\n                  <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\n                    <h1>{title}</h1>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-10 mx-auto col-md-3 my-3\">\n                    <img src={poster} className=\"img-fluid\" alt=\"\" />\n                  </div>\n                  <div className=\"col-10 mx-auto col-md-8 my-3 text-capitalize\">\n                    <h4 className=\"text-title text-uppercase text-muted mt-3 mb-2\">\n                      Genre : <span className=\"text-uppercase\">{genre}</span>\n                    </h4>\n                    <h4 className=\"text-blue\">\n                      <strong>\n                        price : <span>$</span>\n                        {price}\n                      </strong>\n                    </h4>\n                    <p className=\"text-capitalize font-weight-bold mt-3 mb-0\">\n                      Plot :\n                    </p>\n                    <p className=\"text-muted lead\">{plot}</p>\n                    <button onClick={() => { value.handleList()}}>\n                    <Link to=\"/\">Back to List View</Link>\n                  </button>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n          }\n      }\n      </MovieConsumer>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Default extends Component {\n  render() {\n    return (\n      <div>\n        <h3>Page Not Found!</h3>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/NavBar';\nimport MovieList from './components/MovieList';\nimport Details from './components/Details';\nimport Default from './components/Default';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar/>\n        <Switch>\n          <Route exact path=\"/\" component={MovieList}/>\n          <Route path=\"/details\" component={Details}/>\n          <Route component={Default}/>\n        </Switch>\n        \n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { MovieProvider } from \"./context\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <MovieProvider>\n        <Router>\n            <App />\n        </Router>\n    </MovieProvider>, \n    document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}